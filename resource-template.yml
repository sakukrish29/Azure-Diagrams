# ------------------------------------------------------------------------------------ #
# Description:
#   Deploys the Function App resource.
#
# ------------------------------------------------------------------------------------ #

parameters:
- name: applicationInsightsName
  type: string
  default: $(site)-ai-$(environment)-$(role)-$(increment)
  
- name: applicationInsightsResourceGroupName
  type: string
  default: ''

- name: applicationServicePlanName  
  type: string
  default: $(site)-asp-$(environment)-$(role)-$(increment)

- name: applicationServicePlanResourceGroupName
  type: string
  default: ''

- name: applicationServicePlanSize
  type: string
  default: S1

- name: applicationServicePlanTier
  type: string
  default: Standard

- name: connectedServiceName
  type: string

- name: functionAppDiagnosticSettings
  type: object
  default: ''

- name: functionAppName
  type: string
  default: $(site)-fap-$(environment)-$(role)-$(increment)

- name: resourceGroupName
  type: string

- name: resourceGroupLocation
  type: string
  default: northeurope

- name: resourceTags
  type: object
  default: {}

- name: resourceTagsString
  type: string
  default: ''

- name: storageAccountName
  type: string
  default: $(site)-sa-$(environment)-$(role)-$(increment)

- name: storageAccountResourceGroupName
  type: string  

- name: subscriptionID
  type: string

steps:
# Validates that all the template parameters match the template schema.
- template: ../../common/validation/AA.Parameters/validate-parameters.yml
  parameters:
    excludeParameterNames:
      - resourceTags
      - functionAppDiagnosticSettings
      - ${{ if not(parameters.applicationInsightsResourceGroupName) }}:
        - applicationInsightsResourceGroupName
      - ${{ if not(parameters.resourceGroupLocation) }}:
        - resourceGroupLocation
      - ${{ if not(parameters.resourceTagsString) }}:
        - resourceTagsString
      - ${{ if not(parameters.storageAccountResourceGroupName) }}:
        - storageAccountResourceGroupName
      - ${{ if not(parameters.applicationServicePlanResourceGroupName) }}:
        - applicationServicePlanResourceGroupName
    name: fap
    parameters: '${{ parameters }}'
    schemaPath: $(Agent.BuildDirectory)/paf/resources/AA.FunctionApp/resource-template-schema.yml

# Either derives the tags from the resource group, or uses the supplied resource tags to override.
- ${{ if not(parameters.resourceTagsString) }}:
  - template: ../../common/tasks/AA.ResourceTags/build-resource-tags.yml
    parameters:
      connectedServiceName: '${{ parameters.connectedServiceName }}'
      name: fap
      outputVariable: _resourceTags
      resourceGroupName: '${{ parameters.resourceGroupName }}'
      resourceTags: '${{ parameters.resourceTags }}'

# Gets the location of the resource group, if it wasn't supplied.
- ${{ if not(parameters.resourceGroupLocation) }}:
  - template: ../../common/tasks/AA.ResourceGroupLocation/get-resource-group-location.yml
    parameters:
      connectedServiceName: '${{ parameters.connectedServiceName }}'
      name: fap
      outputVariable: _resourceGroupLocation
      resourceGroupName: '${{ parameters.resourceGroupName }}'

#Builds the override parameters, to be used for the ARM template deployment.
- template: ../../common/tasks/AA.BuildOverrideParameters/build-override-parameters.yml
  parameters:
    name: fap
    outputVariable: _overrideParameters
    overrideParameters:
      applicationInsightsName: '${{ parameters.applicationInsightsName }}'        
      applicationInsightsResourceGroupName: ${{ coalesce(parameters.applicationInsightsResourceGroupName, parameters.resourceGroupName) }}
      applicationServicePlanName: '${{ parameters.applicationServicePlanName }}'
      applicationServicePlanResourceGroupName:  ${{ coalesce(parameters.applicationServicePlanResourceGroupName, parameters.resourceGroupName) }}
      functionAppName: '${{ parameters.functionAppName}}'
      storageAccountName: '${{ parameters.storageAccountName }}'
      storageAccountResourceGroupName: ${{ coalesce(parameters.storageAccountResourceGroupName, parameters.resourceGroupName) }}

# Deploy the resource using the ARM template.
- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'fap: Deploying the Function App "${{ parameters.functionAppName }}"'
  inputs:
    ${{ if not(parameters.resourceGroupLocation) }}:
      location: $(_resourceGroupLocation)
    ${{ if parameters.resourceTagsString }}:
      overrideParameters: '$(_overrideParameters) -resourceTags ${{ parameters.resourceTagsString }}'
    ${{ if parameters.resourceGroupLocation }}:
      location: '${{ parameters.resourceGroupLocation }}'
    ${{ if not(parameters.resourceTagsString) }}:
      overrideParameters: $(_overrideParameters) -resourceTags $(_resourceTags)
    action: Create Or Update Resource Group
    connectedServiceName: '${{ parameters.connectedServiceName }}'
    csmFile: $(Agent.BuildDirectory)/paf/resources/AA.FunctionApp/FunctionApp.Template.json
    csmParametersFile: $(Agent.BuildDirectory)/paf/resources/AA.FunctionApp/FunctionApp.Parameters.json
    deploymentMode: Incremental
    deploymentScope: Resource Group
    resourceGroupName: '${{ parameters.resourceGroupName }}'
    subscriptionName: '${{ parameters.subscriptionID }}'
    subscriptionID: '${{ parameters.subscriptionID }}'
    templateLocation: Linked artifact
  
# Creates diagnostics settings if given.
- ${{ if parameters.functionAppDiagnosticSettings }}:
  - template: ../../common/tasks/AA.DiagnosticSettings/create-diagnostic-settings.yml
    parameters:
      diagnosticSettingName: ds-${{ parameters.functionAppName }}
      name: fap
      resourceName: '${{ parameters.functionAppName }}'
      resourceGroup: '${{ parameters.resourceGroupName }}'
      resourceType: Microsoft.Web/functionApps
      diagnosticSettingDestinations: ${{ parameters.functionAppDiagnosticSettings }}
  

